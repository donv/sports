#!/bin/bash
#
# sports      Startup script for the Sports web application
#
# chkconfig: 345 88 12
# description: Sports web application
# pidfile: /u/apps/$APP/shared/pids/server.pid

. /etc/rc.d/init.d/functions

APP=sports
RAILS_ENV=production
PORT=3007
RUN_AS_USER=capistrano
PIDFILE=/u/apps/$APP/shared/pids/server.pid
APP_DIR="/u/apps/$APP/current"
LOG_DIR="/u/apps/$APP/shared/log"

START_CMD="cd $APP_DIR ;
  source \"$HOME/.rvm/scripts/rvm\" ; rvm use jruby ;
  export JRUBY_OPTS='-J-Xmx2G --server -J-Djava.awt.headless=true -J-Dawt.toolkit=sun.awt.HToolkit' ;
  ruby -v ;
  ruby -S bundle exec puma -d -t 0:20 -p $PORT -e $RAILS_ENV --pidfile $PIDFILE >$LOG_DIR/stdout.log 2>&1
"
STOP_CMD="kill `cat $PIDFILE`"

USER=`whoami`

run() {
	cmd=$1
	if [ "$USER" != "$RUN_AS_USER" ]; then
		echo Running as $USER
        echo su - $RUN_AS_USER -c \"$cmd\"
        su - $RUN_AS_USER -c "$cmd"
    else
    	echo $cmd
        eval $cmd
    fi
}

# See how we were called.
case "$1" in
  start)
	if [ -f $PIDFILE ] && ! ps h `cat $PIDFILE` > /dev/null
	then
	    rm -f $PIDFILE
	fi
    run "$START_CMD"
        ;;
  stop)
    run "$STOP_CMD"
    rm -f ${PIDFILE}
        ;;
  restart)
    run "$STOP_CMD"
    rm -f ${PIDFILE}
    run "$START_CMD"
        ;;
  status)
    ps -ef | grep $APP | grep -e "grep|status"
    ;;
  *)
    echo "Usage: $prog {start|stop|restart|status}"
    exit 1
esac

exit 0
